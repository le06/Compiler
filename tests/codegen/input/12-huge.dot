gurp:
	enter	$(8 * 399), $0
	mov		%rdi, -8(%rbp)
	mov		%rsi, -16(%rbp)
	mov		%rdx, -24(%rbp)
	mov		%rcx, -32(%rbp)
	mov		%r8, -40(%rbp)
	mov		%r9, -48(%rbp)
	mov		16(%rbp), %r10
	mov		%r10, -56(%rbp)
	mov		24(%rbp), %r10
	mov		%r10, -64(%rbp)
	mov		$.strlit, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -248(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -312(%rbp)
	mov		-8(%rbp), %r10
	mov		%r10, -256(%rbp)
	mov		-16(%rbp), %r10
	mov		%r10, -264(%rbp)
	mov		-256(%rbp), %r10
	mov		-264(%rbp), %r11
	imul	%r11, %r10
	mov		%r10, -272(%rbp)
	mov		-40(%rbp), %r10
	mov		%r10, -280(%rbp)
	mov		-272(%rbp), %r10
	mov		-280(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -288(%rbp)
	mov		-32(%rbp), %r10
	mov		%r10, -296(%rbp)
	mov		-288(%rbp), %r10
	mov		-296(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -304(%rbp)
	mov		-304(%rbp), %r11
	mov		%r11, -80(%rbp)
	mov		$.strlit_1, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -320(%rbp)
	mov		-72(%rbp), %r10
	mov		%r10, -352(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -328(%rbp)
	mov		$1, %r10
	mov		%r10, -336(%rbp)
	mov		-328(%rbp), %r10
	mov		-336(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -344(%rbp)
	mov		-344(%rbp), %r11
	mov		%r11, -72(%rbp)
	mov		$.strlit_2, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -360(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -392(%rbp)
	mov		$3, %r10
	mov		%r10, -368(%rbp)
	mov		-72(%rbp), %r10
	mov		%r10, -376(%rbp)
	mov		-368(%rbp), %r10
	mov		-376(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -384(%rbp)
	mov		-384(%rbp), %r11
	mov		%r11, -80(%rbp)
	mov		$.strlit_3, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -400(%rbp)
	mov		-88(%rbp), %r10
	mov		%r10, -448(%rbp)
	mov		-72(%rbp), %r10
	mov		%r10, -408(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -416(%rbp)
	mov		-408(%rbp), %r10
	mov		-416(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -424(%rbp)
	mov		$2, %r10
	mov		%r10, -432(%rbp)
	mov		-424(%rbp), %r10
	mov		-432(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -440(%rbp)
	mov		-440(%rbp), %r11
	mov		%r11, -88(%rbp)
	mov		$.strlit_4, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -456(%rbp)
	mov		-96(%rbp), %r10
	mov		%r10, -488(%rbp)
	mov		-88(%rbp), %r10
	mov		%r10, -464(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -472(%rbp)
	mov		-464(%rbp), %r10
	mov		-472(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -480(%rbp)
	mov		-480(%rbp), %r11
	mov		%r11, -96(%rbp)
	mov		$.strlit_5, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -496(%rbp)
	mov		-104(%rbp), %r10
	mov		%r10, -528(%rbp)
	mov		-72(%rbp), %r10
	mov		%r10, -504(%rbp)
	mov		-88(%rbp), %r10
	mov		%r10, -512(%rbp)
	mov		-504(%rbp), %r10
	mov		-512(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -520(%rbp)
	mov		-520(%rbp), %r11
	mov		%r11, -104(%rbp)
	mov		-88(%rbp), %r10
	mov		%r10, -536(%rbp)
	mov		-104(%rbp), %r10
	mov		%r10, -544(%rbp)
	mov		-544(%rbp), %rdx
	mov		-536(%rbp), %rsi
	mov		$.strlit_6, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -552(%rbp)
	mov		-112(%rbp), %r10
	mov		%r10, -616(%rbp)
	mov		-72(%rbp), %r10
	mov		%r10, -560(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -568(%rbp)
	mov		-88(%rbp), %r10
	mov		%r10, -576(%rbp)
	mov		-104(%rbp), %r10
	mov		%r10, -584(%rbp)
	mov		-576(%rbp), %r10
	mov		-584(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -592(%rbp)
	mov		-568(%rbp), %r10
	mov		-592(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -600(%rbp)
	mov		-560(%rbp), %r10
	mov		-600(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -608(%rbp)
	mov		-608(%rbp), %r11
	mov		%r11, -112(%rbp)
	mov		$.strlit_7, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -624(%rbp)
	mov		-8(%rbp), %r10
	mov		%r10, -632(%rbp)
	mov		$50, %r10
	mov		%r10, -640(%rbp)
	mov		-632(%rbp), %r10
	mov		-640(%rbp), %r11
	cmp		%r11, %r10
	mov		$0, %r10
	mov		$1, %r11
	cmovg	%r11, %r10
	mov		%r10, -648(%rbp)
	mov		-648(%rbp), %r10
	mov		$1, %r11
	cmp		%r11, %r10
	je		.true_1
	mov		-120(%rbp), %r10
	mov		%r10, -680(%rbp)
	mov		-16(%rbp), %r10
	mov		%r10, -656(%rbp)
	mov		-8(%rbp), %r10
	mov		%r10, -664(%rbp)
	mov		-656(%rbp), %r10
	mov		-664(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -672(%rbp)
	mov		-672(%rbp), %r11
	mov		%r11, -120(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -712(%rbp)
	mov		-96(%rbp), %r10
	mov		%r10, -688(%rbp)
	mov		-104(%rbp), %r10
	mov		%r10, -696(%rbp)
	mov		-688(%rbp), %r10
	mov		-696(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -704(%rbp)
	mov		-704(%rbp), %r11
	mov		%r11, -80(%rbp)
	mov		-56(%rbp), %r10
	mov		%r10, -720(%rbp)
	mov		-720(%rbp), %r10
	mov		$1, %r11
	cmp		%r11, %r10
	je		.true
	mov		-152(%rbp), %r10
	mov		%r10, -784(%rbp)
	mov		$3, %r10
	mov		%r10, -728(%rbp)
	mov		-120(%rbp), %r10
	mov		%r10, -736(%rbp)
	mov		-8(%rbp), %r10
	mov		%r10, -744(%rbp)
	mov		-736(%rbp), %r10
	mov		-744(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -752(%rbp)
	mov		$2, %r10
	mov		%r10, -760(%rbp)
	mov		-752(%rbp), %r10
	mov		-760(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -768(%rbp)
	mov		-728(%rbp), %r10
	mov		-768(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -776(%rbp)
	mov		-776(%rbp), %r11
	mov		%r11, -152(%rbp)
	mov		-136(%rbp), %r10
	mov		%r10, -816(%rbp)
	mov		-152(%rbp), %r10
	mov		%r10, -792(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -800(%rbp)
	mov		-792(%rbp), %r10
	mov		-800(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -808(%rbp)
	mov		-808(%rbp), %r11
	mov		%r11, -136(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -864(%rbp)
	mov		-152(%rbp), %r10
	mov		%r10, -824(%rbp)
	mov		-136(%rbp), %r10
	mov		%r10, -832(%rbp)
	mov		-824(%rbp), %r10
	mov		-832(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -840(%rbp)
	mov		-136(%rbp), %r10
	mov		%r10, -848(%rbp)
	mov		-840(%rbp), %r10
	mov		-848(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -856(%rbp)
	mov		-856(%rbp), %r11
	mov		%r11, -48(%rbp)
	jmp		.endif
.true:
	mov		-48(%rbp), %r10
	mov		%r10, -912(%rbp)
	mov		$3, %r10
	mov		%r10, -872(%rbp)
	mov		-8(%rbp), %r10
	mov		%r10, -880(%rbp)
	mov		-120(%rbp), %r10
	mov		%r10, -888(%rbp)
	mov		-880(%rbp), %r10
	mov		-888(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -896(%rbp)
	mov		-872(%rbp), %r10
	mov		-896(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -904(%rbp)
	mov		-904(%rbp), %r11
	mov		%r11, -48(%rbp)
	mov		-136(%rbp), %r10
	mov		%r10, -944(%rbp)
	mov		$3, %r10
	mov		%r10, -920(%rbp)
	mov		-120(%rbp), %r10
	mov		%r10, -928(%rbp)
	mov		-920(%rbp), %r10
	mov		-928(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -936(%rbp)
	mov		-936(%rbp), %r11
	mov		%r11, -136(%rbp)
	mov		-152(%rbp), %r10
	mov		%r10, -976(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -952(%rbp)
	mov		-136(%rbp), %r10
	mov		%r10, -960(%rbp)
	mov		-952(%rbp), %r10
	mov		-960(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -968(%rbp)
	mov		-968(%rbp), %r11
	mov		%r11, -152(%rbp)
.endif:
	jmp		.endif_3
.true_1:
	mov		-120(%rbp), %r10
	mov		%r10, -1024(%rbp)
	mov		-8(%rbp), %r10
	mov		%r10, -984(%rbp)
	mov		-16(%rbp), %r10
	mov		%r10, -992(%rbp)
	mov		-984(%rbp), %r10
	mov		-992(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1000(%rbp)
	mov		-96(%rbp), %r10
	mov		%r10, -1008(%rbp)
	mov		-1000(%rbp), %r10
	mov		-1008(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1016(%rbp)
	mov		-1016(%rbp), %r11
	mov		%r11, -120(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -1056(%rbp)
	mov		-96(%rbp), %r10
	mov		%r10, -1032(%rbp)
	mov		-104(%rbp), %r10
	mov		%r10, -1040(%rbp)
	mov		-1032(%rbp), %r10
	mov		-1040(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1048(%rbp)
	mov		-1048(%rbp), %r11
	mov		%r11, -80(%rbp)
	mov		-24(%rbp), %r10
	mov		%r10, -1064(%rbp)
	mov		-1064(%rbp), %r10
	mov		$1, %r11
	cmp		%r11, %r10
	je		.true_2
	mov		-136(%rbp), %r10
	mov		%r10, -1096(%rbp)
	mov		-120(%rbp), %r10
	mov		%r10, -1072(%rbp)
	mov		$3, %r10
	mov		%r10, -1080(%rbp)
	mov		-1072(%rbp), %r10
	mov		-1080(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1088(%rbp)
	mov		-1088(%rbp), %r11
	mov		%r11, -136(%rbp)
	jmp		.endif_1
.true_2:
	mov		-96(%rbp), %r10
	mov		%r10, -1160(%rbp)
	mov		-40(%rbp), %r10
	mov		%r10, -1104(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -1112(%rbp)
	mov		-1104(%rbp), %r10
	mov		-1112(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1120(%rbp)
	mov		-64(%rbp), %r10
	mov		%r10, -1128(%rbp)
	mov		-112(%rbp), %r10
	mov		%r10, -1136(%rbp)
	mov		-1128(%rbp), %r10
	mov		-1136(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1144(%rbp)
	mov		-1120(%rbp), %r10
	mov		-1144(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1152(%rbp)
	mov		-1152(%rbp), %r11
	mov		%r11, -96(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -1192(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -1168(%rbp)
	mov		$1, %r10
	mov		%r10, -1176(%rbp)
	mov		-1168(%rbp), %r10
	mov		-1176(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1184(%rbp)
	mov		-1184(%rbp), %r11
	mov		%r11, -48(%rbp)
	mov		-136(%rbp), %r10
	mov		%r10, -1224(%rbp)
	mov		-120(%rbp), %r10
	mov		%r10, -1200(%rbp)
	mov		$3, %r10
	mov		%r10, -1208(%rbp)
	mov		-1200(%rbp), %r10
	mov		-1208(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1216(%rbp)
	mov		-1216(%rbp), %r11
	mov		%r11, -136(%rbp)
.endif_1:
	mov		-24(%rbp), %r10
	mov		%r10, -1232(%rbp)
	mov		-1232(%rbp), %r10
	mov		$1, %r11
	cmp		%r11, %r10
	je		.short_circuit
	mov		-56(%rbp), %r10
	mov		%r10, -1240(%rbp)
	mov		-1240(%rbp), %r10
.short_circuit:
	mov		%r10, -1248(%rbp)
	mov		-1248(%rbp), %r10
	mov		$1, %r11
	cmp		%r11, %r10
	jne		.endif_2
.true_3:
	mov		-152(%rbp), %r10
	mov		%r10, -1312(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -1256(%rbp)
	mov		-40(%rbp), %r10
	mov		%r10, -1264(%rbp)
	mov		-1256(%rbp), %r10
	mov		-1264(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1272(%rbp)
	mov		-64(%rbp), %r10
	mov		%r10, -1280(%rbp)
	mov		-16(%rbp), %r10
	mov		%r10, -1288(%rbp)
	mov		-1280(%rbp), %r10
	mov		-1288(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1296(%rbp)
	mov		-1272(%rbp), %r10
	mov		-1296(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1304(%rbp)
	mov		-1304(%rbp), %r11
	mov		%r11, -152(%rbp)
.endif_2:
.endif_3:
	mov		$.strlit_8, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -1320(%rbp)
	mov		-160(%rbp), %r10
	mov		%r10, -1368(%rbp)
	mov		-40(%rbp), %r10
	mov		%r10, -1328(%rbp)
	mov		-96(%rbp), %r10
	mov		%r10, -1336(%rbp)
	mov		-1328(%rbp), %r10
	mov		-1336(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1344(%rbp)
	mov		-72(%rbp), %r10
	mov		%r10, -1352(%rbp)
	mov		-1344(%rbp), %r10
	mov		-1352(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1360(%rbp)
	mov		-1360(%rbp), %r11
	mov		%r11, -160(%rbp)
	mov		-216(%rbp), %r10
	mov		%r10, -1416(%rbp)
	mov		-160(%rbp), %r10
	mov		%r10, -1376(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -1384(%rbp)
	mov		-1376(%rbp), %r10
	mov		-1384(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1392(%rbp)
	mov		-120(%rbp), %r10
	mov		%r10, -1400(%rbp)
	mov		-1392(%rbp), %r10
	mov		-1400(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1408(%rbp)
	mov		-1408(%rbp), %r11
	mov		%r11, -216(%rbp)
	mov		-144(%rbp), %r10
	mov		%r10, -1480(%rbp)
	mov		-160(%rbp), %r10
	mov		%r10, -1424(%rbp)
	mov		-216(%rbp), %r10
	mov		%r10, -1432(%rbp)
	mov		-1424(%rbp), %r10
	mov		-1432(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1440(%rbp)
	mov		-104(%rbp), %r10
	mov		%r10, -1448(%rbp)
	mov		-1440(%rbp), %r10
	mov		-1448(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1456(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -1464(%rbp)
	mov		-1456(%rbp), %r10
	mov		-1464(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1472(%rbp)
	mov		-1472(%rbp), %r11
	mov		%r11, -144(%rbp)
	mov		-176(%rbp), %r10
	mov		%r10, -1560(%rbp)
	mov		-96(%rbp), %r10
	mov		%r10, -1488(%rbp)
	mov		-216(%rbp), %r10
	mov		%r10, -1496(%rbp)
	mov		-1488(%rbp), %r10
	mov		-1496(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1504(%rbp)
	mov		-160(%rbp), %r10
	mov		%r10, -1512(%rbp)
	mov		-136(%rbp), %r10
	mov		%r10, -1520(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -1528(%rbp)
	mov		-1520(%rbp), %r10
	mov		-1528(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1536(%rbp)
	mov		-1512(%rbp), %r10
	mov		-1536(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1544(%rbp)
	mov		-1504(%rbp), %r10
	mov		-1544(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1552(%rbp)
	mov		-1552(%rbp), %r11
	mov		%r11, -176(%rbp)
	mov		-56(%rbp), %r10
	mov		%r10, -1568(%rbp)
	mov		-1568(%rbp), %r10
	mov		$1, %r11
	cmp		%r11, %r10
	je		.true_4
	mov		-184(%rbp), %r10
	mov		%r10, -1584(%rbp)
	mov		$-1, %r10
	mov		%r10, -1576(%rbp)
	mov		-1576(%rbp), %r11
	mov		%r11, -184(%rbp)
	jmp		.endif_4
.true_4:
	mov		-184(%rbp), %r10
	mov		%r10, -1600(%rbp)
	mov		$3, %r10
	mov		%r10, -1592(%rbp)
	mov		-1592(%rbp), %r11
	mov		%r11, -184(%rbp)
.endif_4:
	mov		$.strlit_9, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -1608(%rbp)
	mov		-168(%rbp), %r10
	mov		%r10, -1672(%rbp)
	mov		$99, %r10
	mov		%r10, -1616(%rbp)
	mov		-112(%rbp), %r10
	mov		%r10, -1624(%rbp)
	mov		-1616(%rbp), %r10
	mov		-1624(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1632(%rbp)
	mov		-40(%rbp), %r10
	mov		%r10, -1640(%rbp)
	mov		-1632(%rbp), %r10
	mov		-1640(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1648(%rbp)
	mov		-160(%rbp), %r10
	mov		%r10, -1656(%rbp)
	mov		-1648(%rbp), %r10
	mov		-1656(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1664(%rbp)
	mov		-1664(%rbp), %r11
	mov		%r11, -168(%rbp)
	mov		-200(%rbp), %r10
	mov		%r10, -1816(%rbp)
	mov		-40(%rbp), %r10
	mov		%r10, -1680(%rbp)
	mov		-152(%rbp), %r10
	mov		%r10, -1688(%rbp)
	mov		-1680(%rbp), %r10
	mov		-1688(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1696(%rbp)
	mov		-112(%rbp), %r10
	mov		%r10, -1704(%rbp)
	mov		-1696(%rbp), %r10
	mov		-1704(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1712(%rbp)
	mov		-120(%rbp), %r10
	mov		%r10, -1720(%rbp)
	mov		-1712(%rbp), %r10
	mov		-1720(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1728(%rbp)
	mov		-104(%rbp), %r10
	mov		%r10, -1736(%rbp)
	mov		-1728(%rbp), %r10
	mov		-1736(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1744(%rbp)
	mov		-40(%rbp), %r10
	mov		%r10, -1752(%rbp)
	mov		-1744(%rbp), %r10
	mov		-1752(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1760(%rbp)
	mov		-16(%rbp), %r10
	mov		%r10, -1768(%rbp)
	mov		-1760(%rbp), %r10
	mov		-1768(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1776(%rbp)
	mov		-16(%rbp), %r10
	mov		%r10, -1784(%rbp)
	mov		-1776(%rbp), %r10
	mov		-1784(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1792(%rbp)
	mov		-40(%rbp), %r10
	mov		%r10, -1800(%rbp)
	mov		-1792(%rbp), %r10
	mov		-1800(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1808(%rbp)
	mov		-1808(%rbp), %r11
	mov		%r11, -200(%rbp)
	mov		-224(%rbp), %r10
	mov		%r10, -1880(%rbp)
	mov		-216(%rbp), %r10
	mov		%r10, -1824(%rbp)
	mov		-160(%rbp), %r10
	mov		%r10, -1832(%rbp)
	mov		-1824(%rbp), %r10
	mov		-1832(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1840(%rbp)
	mov		-112(%rbp), %r10
	mov		%r10, -1848(%rbp)
	mov		-1840(%rbp), %r10
	mov		-1848(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1856(%rbp)
	mov		-160(%rbp), %r10
	mov		%r10, -1864(%rbp)
	mov		-1856(%rbp), %r10
	mov		-1864(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1872(%rbp)
	mov		-1872(%rbp), %r11
	mov		%r11, -224(%rbp)
	mov		-240(%rbp), %r10
	mov		%r10, -1944(%rbp)
	mov		-64(%rbp), %r10
	mov		%r10, -1888(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -1896(%rbp)
	mov		-1888(%rbp), %r10
	mov		-1896(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1904(%rbp)
	mov		-32(%rbp), %r10
	mov		%r10, -1912(%rbp)
	mov		-1904(%rbp), %r10
	mov		-1912(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1920(%rbp)
	mov		-40(%rbp), %r10
	mov		%r10, -1928(%rbp)
	mov		-1920(%rbp), %r10
	mov		-1928(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1936(%rbp)
	mov		-1936(%rbp), %r11
	mov		%r11, -240(%rbp)
	mov		-184(%rbp), %r10
	mov		%r10, -1952(%rbp)
	mov		$-1, %r10
	mov		%r10, -1960(%rbp)
	mov		-1952(%rbp), %r10
	mov		-1960(%rbp), %r11
	cmp		%r11, %r10
	mov		$0, %r10
	mov		$1, %r11
	cmove	%r11, %r10
	mov		%r10, -1968(%rbp)
	mov		-1968(%rbp), %r10
	mov		$1, %r11
	cmp		%r11, %r10
	je		.true_5
	mov		-232(%rbp), %r10
	mov		%r10, -2000(%rbp)
	mov		-240(%rbp), %r10
	mov		%r10, -1976(%rbp)
	mov		-224(%rbp), %r10
	mov		%r10, -1984(%rbp)
	mov		-1976(%rbp), %r10
	mov		-1984(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -1992(%rbp)
	mov		-1992(%rbp), %r11
	mov		%r11, -232(%rbp)
	jmp		.endif_5
.true_5:
	mov		-232(%rbp), %r10
	mov		%r10, -2032(%rbp)
	mov		-224(%rbp), %r10
	mov		%r10, -2008(%rbp)
	mov		-240(%rbp), %r10
	mov		%r10, -2016(%rbp)
	mov		-2008(%rbp), %r10
	mov		-2016(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2024(%rbp)
	mov		-2024(%rbp), %r11
	mov		%r11, -232(%rbp)
.endif_5:
	mov		-208(%rbp), %r10
	mov		%r10, -2080(%rbp)
	mov		-168(%rbp), %r10
	mov		%r10, -2040(%rbp)
	mov		-176(%rbp), %r10
	mov		%r10, -2048(%rbp)
	mov		-2040(%rbp), %r10
	mov		-2048(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2056(%rbp)
	mov		-184(%rbp), %r10
	mov		%r10, -2064(%rbp)
	mov		-2056(%rbp), %r10
	mov		-2064(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2072(%rbp)
	mov		-2072(%rbp), %r11
	mov		%r11, -208(%rbp)
	mov		-128(%rbp), %r10
	mov		%r10, -2112(%rbp)
	mov		$42, %r10
	mov		%r10, -2088(%rbp)
	mov		-208(%rbp), %r10
	mov		%r10, -2096(%rbp)
	mov		-2088(%rbp), %r10
	mov		-2096(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2104(%rbp)
	mov		-2104(%rbp), %r11
	mov		%r11, -128(%rbp)
	mov		$.strlit_10, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -2120(%rbp)
	mov		-8(%rbp), %r10
	mov		%r10, -2128(%rbp)
	mov		-72(%rbp), %r10
	mov		%r10, -2136(%rbp)
	mov		-2128(%rbp), %r10
	mov		-2136(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2144(%rbp)
	mov		-32(%rbp), %r10
	mov		%r10, -2152(%rbp)
	mov		-2144(%rbp), %r10
	mov		-2152(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2160(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -2168(%rbp)
	mov		-2160(%rbp), %r10
	mov		-2168(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2176(%rbp)
	mov		-40(%rbp), %r10
	mov		%r10, -2184(%rbp)
	mov		-2176(%rbp), %r10
	mov		-2184(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2192(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -2200(%rbp)
	mov		-2192(%rbp), %r10
	mov		-2200(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2208(%rbp)
	mov		-96(%rbp), %r10
	mov		%r10, -2216(%rbp)
	mov		-2208(%rbp), %r10
	mov		-2216(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2224(%rbp)
	mov		-104(%rbp), %r10
	mov		%r10, -2232(%rbp)
	mov		-2224(%rbp), %r10
	mov		-2232(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2240(%rbp)
	mov		-2240(%rbp), %rsi
	mov		$.strlit_11, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -2248(%rbp)
	mov		$.strlit_12, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -2256(%rbp)
	mov		-16(%rbp), %r10
	mov		%r10, -2264(%rbp)
	mov		-88(%rbp), %r10
	mov		%r10, -2272(%rbp)
	mov		-2264(%rbp), %r10
	mov		-2272(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2280(%rbp)
	mov		-64(%rbp), %r10
	mov		%r10, -2288(%rbp)
	mov		-2280(%rbp), %r10
	mov		-2288(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2296(%rbp)
	mov		-112(%rbp), %r10
	mov		%r10, -2304(%rbp)
	mov		-2296(%rbp), %r10
	mov		-2304(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2312(%rbp)
	mov		-120(%rbp), %r10
	mov		%r10, -2320(%rbp)
	mov		-2312(%rbp), %r10
	mov		-2320(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2328(%rbp)
	mov		-136(%rbp), %r10
	mov		%r10, -2336(%rbp)
	mov		-2328(%rbp), %r10
	mov		-2336(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2344(%rbp)
	mov		-144(%rbp), %r10
	mov		%r10, -2352(%rbp)
	mov		-2344(%rbp), %r10
	mov		-2352(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2360(%rbp)
	mov		-224(%rbp), %r10
	mov		%r10, -2368(%rbp)
	mov		-2360(%rbp), %r10
	mov		-2368(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2376(%rbp)
	mov		-2376(%rbp), %rsi
	mov		$.strlit_13, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -2384(%rbp)
	mov		$.strlit_14, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -2392(%rbp)
	mov		-240(%rbp), %r10
	mov		%r10, -2400(%rbp)
	mov		-152(%rbp), %r10
	mov		%r10, -2408(%rbp)
	mov		-2400(%rbp), %r10
	mov		-2408(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2416(%rbp)
	mov		-160(%rbp), %r10
	mov		%r10, -2424(%rbp)
	mov		-2416(%rbp), %r10
	mov		-2424(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2432(%rbp)
	mov		-208(%rbp), %r10
	mov		%r10, -2440(%rbp)
	mov		-2432(%rbp), %r10
	mov		-2440(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2448(%rbp)
	mov		-200(%rbp), %r10
	mov		%r10, -2456(%rbp)
	mov		-2448(%rbp), %r10
	mov		-2456(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2464(%rbp)
	mov		-192(%rbp), %r10
	mov		%r10, -2472(%rbp)
	mov		-2464(%rbp), %r10
	mov		-2472(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2480(%rbp)
	mov		-184(%rbp), %r10
	mov		%r10, -2488(%rbp)
	mov		-2480(%rbp), %r10
	mov		-2488(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2496(%rbp)
	mov		-232(%rbp), %r10
	mov		%r10, -2504(%rbp)
	mov		-2496(%rbp), %r10
	mov		-2504(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2512(%rbp)
	mov		-2512(%rbp), %rsi
	mov		$.strlit_15, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -2520(%rbp)
	mov		$.strlit_16, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -2528(%rbp)
	mov		-24(%rbp), %r10
	mov		%r10, -2536(%rbp)
	mov		-2536(%rbp), %r10
	mov		$1, %r11
	cmp		%r11, %r10
	je		.true_7
	mov		-56(%rbp), %r10
	mov		%r10, -2544(%rbp)
	mov		-2544(%rbp), %r10
	mov		$1, %r11
	cmp		%r11, %r10
	je		.true_6
	mov		-216(%rbp), %r10
	mov		%r10, -2552(%rbp)
	mov		-176(%rbp), %r10
	mov		%r10, -2560(%rbp)
	mov		-2552(%rbp), %r10
	mov		-2560(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2568(%rbp)
	mov		-128(%rbp), %r10
	mov		%r10, -2576(%rbp)
	mov		-2568(%rbp), %r10
	mov		-2576(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2584(%rbp)
	mov		-168(%rbp), %r10
	mov		%r10, -2592(%rbp)
	mov		-2584(%rbp), %r10
	mov		-2592(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2600(%rbp)
	mov		-2600(%rbp), %rsi
	mov		$.strlit_17, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -2608(%rbp)
	jmp		.endif_6
.true_6:
	mov		-168(%rbp), %r10
	mov		%r10, -2616(%rbp)
	mov		-176(%rbp), %r10
	mov		%r10, -2624(%rbp)
	mov		-2616(%rbp), %r10
	mov		-2624(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2632(%rbp)
	mov		-216(%rbp), %r10
	mov		%r10, -2640(%rbp)
	mov		-2632(%rbp), %r10
	mov		-2640(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2648(%rbp)
	mov		-128(%rbp), %r10
	mov		%r10, -2656(%rbp)
	mov		-2648(%rbp), %r10
	mov		-2656(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2664(%rbp)
	mov		-2664(%rbp), %rsi
	mov		$.strlit_18, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -2672(%rbp)
.endif_6:
	jmp		.endif_7
.true_7:
	mov		-128(%rbp), %r10
	mov		%r10, -2680(%rbp)
	mov		-168(%rbp), %r10
	mov		%r10, -2688(%rbp)
	mov		-2680(%rbp), %r10
	mov		-2688(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2696(%rbp)
	mov		-176(%rbp), %r10
	mov		%r10, -2704(%rbp)
	mov		-2696(%rbp), %r10
	mov		-2704(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2712(%rbp)
	mov		-216(%rbp), %r10
	mov		%r10, -2720(%rbp)
	mov		-2712(%rbp), %r10
	mov		-2720(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2728(%rbp)
	mov		-2728(%rbp), %rsi
	mov		$.strlit_19, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -2736(%rbp)
.endif_7:
	mov		$.strlit_20, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -2744(%rbp)
	mov		-8(%rbp), %r10
	mov		%r10, -2752(%rbp)
	mov		-16(%rbp), %r10
	mov		%r10, -2760(%rbp)
	mov		-2752(%rbp), %r10
	mov		-2760(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2768(%rbp)
	mov		-32(%rbp), %r10
	mov		%r10, -2776(%rbp)
	mov		-2768(%rbp), %r10
	mov		-2776(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2784(%rbp)
	mov		-40(%rbp), %r10
	mov		%r10, -2792(%rbp)
	mov		-2784(%rbp), %r10
	mov		-2792(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2800(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -2808(%rbp)
	mov		-2800(%rbp), %r10
	mov		-2808(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2816(%rbp)
	mov		-64(%rbp), %r10
	mov		%r10, -2824(%rbp)
	mov		-2816(%rbp), %r10
	mov		-2824(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2832(%rbp)
	mov		-72(%rbp), %r10
	mov		%r10, -2840(%rbp)
	mov		-2832(%rbp), %r10
	mov		-2840(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2848(%rbp)
	mov		-80(%rbp), %r10
	mov		%r10, -2856(%rbp)
	mov		-2848(%rbp), %r10
	mov		-2856(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2864(%rbp)
	mov		-88(%rbp), %r10
	mov		%r10, -2872(%rbp)
	mov		-2864(%rbp), %r10
	mov		-2872(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2880(%rbp)
	mov		-96(%rbp), %r10
	mov		%r10, -2888(%rbp)
	mov		-2880(%rbp), %r10
	mov		-2888(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2896(%rbp)
	mov		-104(%rbp), %r10
	mov		%r10, -2904(%rbp)
	mov		-2896(%rbp), %r10
	mov		-2904(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2912(%rbp)
	mov		-112(%rbp), %r10
	mov		%r10, -2920(%rbp)
	mov		-2912(%rbp), %r10
	mov		-2920(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2928(%rbp)
	mov		-120(%rbp), %r10
	mov		%r10, -2936(%rbp)
	mov		-2928(%rbp), %r10
	mov		-2936(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2944(%rbp)
	mov		-128(%rbp), %r10
	mov		%r10, -2952(%rbp)
	mov		-2944(%rbp), %r10
	mov		-2952(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2960(%rbp)
	mov		-136(%rbp), %r10
	mov		%r10, -2968(%rbp)
	mov		-2960(%rbp), %r10
	mov		-2968(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -2976(%rbp)
	mov		-144(%rbp), %r10
	mov		%r10, -2984(%rbp)
	mov		-2976(%rbp), %r10
	mov		-2984(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -2992(%rbp)
	mov		-152(%rbp), %r10
	mov		%r10, -3000(%rbp)
	mov		-2992(%rbp), %r10
	mov		-3000(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -3008(%rbp)
	mov		-160(%rbp), %r10
	mov		%r10, -3016(%rbp)
	mov		-3008(%rbp), %r10
	mov		-3016(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -3024(%rbp)
	mov		-168(%rbp), %r10
	mov		%r10, -3032(%rbp)
	mov		-3024(%rbp), %r10
	mov		-3032(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -3040(%rbp)
	mov		-176(%rbp), %r10
	mov		%r10, -3048(%rbp)
	mov		-3040(%rbp), %r10
	mov		-3048(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -3056(%rbp)
	mov		-184(%rbp), %r10
	mov		%r10, -3064(%rbp)
	mov		-3056(%rbp), %r10
	mov		-3064(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -3072(%rbp)
	mov		-192(%rbp), %r10
	mov		%r10, -3080(%rbp)
	mov		-3072(%rbp), %r10
	mov		-3080(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -3088(%rbp)
	mov		-200(%rbp), %r10
	mov		%r10, -3096(%rbp)
	mov		-3088(%rbp), %r10
	mov		-3096(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -3104(%rbp)
	mov		-208(%rbp), %r10
	mov		%r10, -3112(%rbp)
	mov		-3104(%rbp), %r10
	mov		-3112(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -3120(%rbp)
	mov		-216(%rbp), %r10
	mov		%r10, -3128(%rbp)
	mov		-3120(%rbp), %r10
	mov		-3128(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -3136(%rbp)
	mov		-224(%rbp), %r10
	mov		%r10, -3144(%rbp)
	mov		-3136(%rbp), %r10
	mov		-3144(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -3152(%rbp)
	mov		-232(%rbp), %r10
	mov		%r10, -3160(%rbp)
	mov		-3152(%rbp), %r10
	mov		-3160(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -3168(%rbp)
	mov		-240(%rbp), %r10
	mov		%r10, -3176(%rbp)
	mov		-3168(%rbp), %r10
	mov		-3176(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -3184(%rbp)
	mov		-3184(%rbp), %rax
	leave
	ret
	jmp		.MISSING_RETURN
	.globl main
main:
	enter	$(8 * 138), $0
	mov		-48(%rbp), %r10
	mov		%r10, -1096(%rbp)
	mov		$3, %r10
	mov		%r10, -56(%rbp)
	mov		-56(%rbp), %r11
	mov		%r11, -48(%rbp)
.for_begin:
	mov		-48(%rbp), %r10
	mov		%r10, -1096(%rbp)
	mov		$5, %r10
	mov		%r10, -80(%rbp)
	mov		-1096(%rbp), %r10
	mov		-80(%rbp), %r11
	cmp		%r11, %r10
	mov		$0, %r10
	mov		$1, %r11
	cmovl	%r11, %r10
	mov		%r10, -88(%rbp)
	mov		-88(%rbp), %r10
	mov		$1, %r11
	cmp		%r11, %r10
	jne		.for_end
	mov		$.strlit_21, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -96(%rbp)
	mov		-16(%rbp), %r10
	mov		%r10, -256(%rbp)
	mov		$1, %r10
	mov		%r10, -104(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -112(%rbp)
	mov		-104(%rbp), %r10
	mov		-112(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -120(%rbp)
	mov		$0, %r10
	mov		%r10, -128(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -136(%rbp)
	mov		-128(%rbp), %r10
	mov		-136(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -144(%rbp)
	mov		$1, %r10
	mov		%r10, -152(%rbp)
	mov		$3, %r10
	mov		%r10, -160(%rbp)
	mov		$2, %r10
	mov		%r10, -168(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -176(%rbp)
	mov		-168(%rbp), %r10
	mov		-176(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -184(%rbp)
	mov		$1, %r10
	mov		%r10, -192(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -200(%rbp)
	mov		-192(%rbp), %r10
	mov		-200(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -208(%rbp)
	mov		$1, %r10
	mov		%r10, -216(%rbp)
	mov		$4, %r10
	mov		%r10, -224(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -232(%rbp)
	mov		-224(%rbp), %r10
	mov		-232(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -240(%rbp)
	mov		-240(%rbp), %r10
	push	%r10
	mov		-216(%rbp), %r10
	push	%r10
	mov		-208(%rbp), %r9
	mov		-184(%rbp), %r8
	mov		-160(%rbp), %rcx
	mov		-152(%rbp), %rdx
	mov		-144(%rbp), %rsi
	mov		-120(%rbp), %rdi
	call	gurp
	mov		%rax, -248(%rbp)
	mov		-248(%rbp), %r11
	mov		%r11, -16(%rbp)
	mov		$.strlit_22, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -264(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -272(%rbp)
	mov		-272(%rbp), %rsi
	mov		$.strlit_23, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -280(%rbp)
	mov		$.strlit_24, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -288(%rbp)
	mov		-16(%rbp), %r10
	mov		%r10, -432(%rbp)
	mov		$1, %r10
	mov		%r10, -296(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -304(%rbp)
	mov		-296(%rbp), %r10
	mov		-304(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -312(%rbp)
	mov		$0, %r10
	mov		%r10, -320(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -328(%rbp)
	mov		-320(%rbp), %r10
	mov		-328(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -336(%rbp)
	mov		$1, %r10
	mov		%r10, -344(%rbp)
	mov		$3, %r10
	mov		%r10, -352(%rbp)
	mov		$2, %r10
	mov		%r10, -360(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -368(%rbp)
	mov		-360(%rbp), %r10
	mov		-368(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -376(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -384(%rbp)
	mov		$1, %r10
	mov		%r10, -392(%rbp)
	mov		-384(%rbp), %r10
	mov		-392(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -400(%rbp)
	mov		$1, %r10
	mov		%r10, -408(%rbp)
	mov		$0, %r10
	mov		%r10, -416(%rbp)
	mov		-416(%rbp), %r10
	push	%r10
	mov		-408(%rbp), %r10
	push	%r10
	mov		-400(%rbp), %r9
	mov		-376(%rbp), %r8
	mov		-352(%rbp), %rcx
	mov		-344(%rbp), %rdx
	mov		-336(%rbp), %rsi
	mov		-312(%rbp), %rdi
	call	gurp
	mov		%rax, -424(%rbp)
	mov		-424(%rbp), %r11
	mov		%r11, -16(%rbp)
	mov		$.strlit_25, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -440(%rbp)
	mov		-8(%rbp), %r10
	mov		%r10, -616(%rbp)
	mov		$3, %r10
	mov		%r10, -448(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -456(%rbp)
	mov		-448(%rbp), %r10
	mov		-456(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -464(%rbp)
	mov		$-8, %r10
	mov		%r10, -472(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -480(%rbp)
	mov		-472(%rbp), %r10
	mov		-480(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -488(%rbp)
	mov		$0, %r10
	mov		%r10, -496(%rbp)
	mov		$12, %r10
	mov		%r10, -504(%rbp)
	mov		$3, %r10
	mov		%r10, -512(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -520(%rbp)
	mov		-512(%rbp), %r10
	mov		-520(%rbp), %r11
	imul	%r11, %r10
	mov		%r10, -528(%rbp)
	mov		-504(%rbp), %r10
	mov		-528(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -536(%rbp)
	mov		$16, %r10
	mov		%r10, -544(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -552(%rbp)
	mov		-544(%rbp), %r10
	mov		-552(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -560(%rbp)
	mov		$1, %r10
	mov		%r10, -568(%rbp)
	mov		$1, %r10
	mov		%r10, -576(%rbp)
	mov		$8, %r10
	mov		%r10, -584(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -592(%rbp)
	mov		-584(%rbp), %r10
	mov		-592(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -600(%rbp)
	mov		-600(%rbp), %r10
	push	%r10
	mov		-576(%rbp), %r10
	push	%r10
	mov		-568(%rbp), %r9
	mov		-560(%rbp), %r8
	mov		-536(%rbp), %rcx
	mov		-496(%rbp), %rdx
	mov		-488(%rbp), %rsi
	mov		-464(%rbp), %rdi
	call	gurp
	mov		%rax, -608(%rbp)
	mov		-608(%rbp), %r11
	mov		%r11, -8(%rbp)
	mov		$.strlit_26, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -624(%rbp)
	mov		-24(%rbp), %r10
	mov		%r10, -800(%rbp)
	mov		$2, %r10
	mov		%r10, -632(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -640(%rbp)
	mov		-632(%rbp), %r10
	mov		-640(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -648(%rbp)
	mov		$6, %r10
	mov		%r10, -656(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -664(%rbp)
	mov		-656(%rbp), %r10
	mov		-664(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -672(%rbp)
	mov		$0, %r10
	mov		%r10, -680(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -688(%rbp)
	mov		$-3, %r10
	mov		%r10, -696(%rbp)
	mov		-688(%rbp), %r10
	mov		-696(%rbp), %r11
	imul	%r11, %r10
	mov		%r10, -704(%rbp)
	mov		$1, %r10
	mov		%r10, -712(%rbp)
	mov		$3, %r10
	mov		%r10, -720(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -728(%rbp)
	mov		$2, %r10
	mov		%r10, -736(%rbp)
	mov		-728(%rbp), %r10
	mov		-736(%rbp), %r11
	imul	%r11, %r10
	mov		%r10, -744(%rbp)
	mov		-720(%rbp), %r10
	mov		-744(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -752(%rbp)
	mov		$0, %r10
	mov		%r10, -760(%rbp)
	mov		$5, %r10
	mov		%r10, -768(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -776(%rbp)
	mov		-768(%rbp), %r10
	mov		-776(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -784(%rbp)
	mov		-784(%rbp), %r10
	push	%r10
	mov		-760(%rbp), %r10
	push	%r10
	mov		-752(%rbp), %r9
	mov		-712(%rbp), %r8
	mov		-704(%rbp), %rcx
	mov		-680(%rbp), %rdx
	mov		-672(%rbp), %rsi
	mov		-648(%rbp), %rdi
	call	gurp
	mov		%rax, -792(%rbp)
	mov		-792(%rbp), %r11
	mov		%r11, -24(%rbp)
	mov		$.strlit_27, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -808(%rbp)
	mov		-32(%rbp), %r10
	mov		%r10, -952(%rbp)
	mov		$-3, %r10
	mov		%r10, -816(%rbp)
	mov		$8, %r10
	mov		%r10, -824(%rbp)
	mov		$1, %r10
	mov		%r10, -832(%rbp)
	mov		$7, %r10
	mov		%r10, -840(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -848(%rbp)
	mov		-840(%rbp), %r10
	mov		-848(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -856(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -864(%rbp)
	mov		$4, %r10
	mov		%r10, -872(%rbp)
	mov		-864(%rbp), %r10
	mov		-872(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -880(%rbp)
	mov		$2, %r10
	mov		%r10, -888(%rbp)
	mov		$0, %r10
	mov		%r10, -896(%rbp)
	mov		$6, %r10
	mov		%r10, -904(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -912(%rbp)
	mov		$9, %r10
	mov		%r10, -920(%rbp)
	mov		-912(%rbp), %r10
	mov		-920(%rbp), %r11
	imul	%r11, %r10
	mov		%r10, -928(%rbp)
	mov		-904(%rbp), %r10
	mov		-928(%rbp), %r11
	sub		%r11, %r10
	mov		%r10, -936(%rbp)
	mov		-936(%rbp), %r10
	push	%r10
	mov		-896(%rbp), %r10
	push	%r10
	mov		-888(%rbp), %r9
	mov		-880(%rbp), %r8
	mov		-856(%rbp), %rcx
	mov		-832(%rbp), %rdx
	mov		-824(%rbp), %rsi
	mov		-816(%rbp), %rdi
	call	gurp
	mov		%rax, -944(%rbp)
	mov		-944(%rbp), %r11
	mov		%r11, -32(%rbp)
	mov		$.strlit_28, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -960(%rbp)
	mov		$.strlit_29, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -968(%rbp)
	mov		-8(%rbp), %r10
	mov		%r10, -976(%rbp)
	mov		-976(%rbp), %rsi
	mov		$.strlit_30, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -984(%rbp)
	mov		$.strlit_31, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -992(%rbp)
	mov		-16(%rbp), %r10
	mov		%r10, -1000(%rbp)
	mov		-1000(%rbp), %rsi
	mov		$.strlit_32, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -1008(%rbp)
	mov		$.strlit_33, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -1016(%rbp)
	mov		-24(%rbp), %r10
	mov		%r10, -1024(%rbp)
	mov		-1024(%rbp), %rsi
	mov		$.strlit_34, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -1032(%rbp)
	mov		$.strlit_35, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -1040(%rbp)
	mov		-32(%rbp), %r10
	mov		%r10, -1048(%rbp)
	mov		-1048(%rbp), %rsi
	mov		$.strlit_36, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -1056(%rbp)
	mov		$.strlit_37, %rdi
	mov		$0, %rax
	call	printf
	mov		%rax, -1064(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -1096(%rbp)
	mov		-48(%rbp), %r10
	mov		%r10, -1096(%rbp)
	mov		$1, %r10
	mov		%r10, -1080(%rbp)
	mov		-1096(%rbp), %r10
	mov		-1080(%rbp), %r11
	add		%r11, %r10
	mov		%r10, -1088(%rbp)
	mov		-1088(%rbp), %r11
	mov		%r11, -48(%rbp)
	jmp		.for_begin
.for_end:
	mov		$0, %rax
	leave
	ret
.ARRAY_OUT_OF_BOUNDS:
	mov		$.error, %rdi
	mov		$0, %rax
	call	printf
	mov		$1, %rax
	int		$0x80
.MISSING_RETURN:
	mov		$.error_1, %rdi
	mov		$0, %rax
	call	printf
	mov		$1, %rax
	int		$0x80
.DIVIDE_BY_ZERO:
	mov		$.error_2, %rdi
	mov		$0, %rax
	call	printf
	mov		$1, %rax
	int		$0x80
.strlit:
	.string	"top of gurp\n"
.strlit_1:
	.string	"done j\n"
.strlit_2:
	.string	"done i\n"
.strlit_3:
	.string	"done j\n"
.strlit_4:
	.string	"done k\n"
.strlit_5:
	.string	"done k\n"
.strlit_6:
	.string	"done m\n%d %d\n"
.strlit_7:
	.string	"after n\n"
.strlit_8:
	.string	"after first if\n"
.strlit_9:
	.string	"after second if\n"
.strlit_10:
	.string	"after third if\n"
.strlit_11:
	.string	"%d"
.strlit_12:
	.string	" "
.strlit_13:
	.string	"%d"
.strlit_14:
	.string	" "
.strlit_15:
	.string	"%d"
.strlit_16:
	.string	" "
.strlit_17:
	.string	"%d"
.strlit_18:
	.string	"%d"
.strlit_19:
	.string	"%d"
.strlit_20:
	.string	"after fourth if\n"
.strlit_21:
	.string	"Top of loop\n"
.strlit_22:
	.string	"done z gurp\n"
.strlit_23:
	.string	"%d"
.strlit_24:
	.string	"\n"
.strlit_25:
	.string	"done 0z gurp\n"
.strlit_26:
	.string	"done y gurp\n"
.strlit_27:
	.string	"done a gurp\n"
.strlit_28:
	.string	"done b gurp\n"
.strlit_29:
	.string	"After gurps\n"
.strlit_30:
	.string	"%d"
.strlit_31:
	.string	" "
.strlit_32:
	.string	"%d"
.strlit_33:
	.string	" "
.strlit_34:
	.string	"%d"
.strlit_35:
	.string	" "
.strlit_36:
	.string	"%d"
.strlit_37:
	.string	"\n"
.error:
	.string	"Exception: array index out-of-bounds\n"
.error_1:
	.string	"Exception: non-void function missing return statement\n"
.error_2:
	.string	"Exception: division by zero\n"
